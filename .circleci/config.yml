# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.15.8
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: |
           go get all
           go mod download
           go mod vendor
           ls -lah
      - persist_to_workspace:
          root: ./
          paths:
            - ./
  veracode_sast_pipeline_scan:
    docker: 
      - image: veracode/pipeline-scan:latest
    working_directory: ./
    steps:
      # get the files from the previous job
      - attach_workspace:
          at: ./
      - run:
         name: "Run Veracode Pipeline Scan and create a baseline"
         command: |
           zip -r upload.zip ./
           ls -l | grep app.zip
           java -jar /opt/veracode/pipeline-scan.jar -vid $VID -vkey $VKEY -f upload.zip 
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
      - veracode_sast_pipeline_scan
